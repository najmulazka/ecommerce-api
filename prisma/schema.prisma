// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users{
  id Int @id @default(autoincrement())
  email String @unique
  password String?
  googleId String?
  profiles Profiles?
  products Products[]
  orders Orders[]
}

model Profiles{
  id Int @id @default(autoincrement())
  fullName String?
  address String?
  phoneNumber String?
  profilePicture String?
  fileId String?
  userId Int @unique
  users Users @relation(fields: [userId], references: [id])
}

model Products{
  id Int @id @default(autoincrement())
  productName String
  description String?
  price Float
  stock Int 
  productPicture String
  fileId String
  userId Int
  users Users @relation(fields: [userId], references: [id])
  categories CategoriesOnProducts[]
  orederDetails OrderDetails[]
}

model Categorys{
  id Int @id @default(autoincrement())
  categoryName String @unique
  products CategoriesOnProducts[]
}

model CategoriesOnProducts {
  products       Products     @relation(fields: [productId], references: [id])
  productId    Int 
  categorys   Categorys @relation(fields: [categoryId], references: [id])
  categoryId Int 

  @@id([productId, categoryId])
}

model Orders{
  id Int @id @default(autoincrement())
  orderDate DateTime
  shoppingAddress String
  userId Int
  totalPrice Float
  users Users @relation(fields: [userId], references: [id])
  orderDetails OrderDetails[]
}

model OrderDetails{
  id Int @id @default(autoincrement())
  orderId    Int
  productId  Int
  amount   Int
  subTotal Float
  products    Products @relation(fields: [productId], references: [id])
  orders      Orders   @relation(fields: [orderId], references: [id])
}
